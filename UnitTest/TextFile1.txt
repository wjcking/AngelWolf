        [TestMethod]
        public void Testkets()
        {
            //var bytes = File.ReadAllBytes(@"e:\VSProjects\AngelWolf\Rastera\asnic\rastera\ketself.html");
            var lines = File.ReadAllLines(@"f:\VSProjects\AngelWolf\Rastera\asnic\rastera\ketself.html");
            //  var u= lines.GetUpperBound(0);
            char[] kets;

            int index = 0;
            //   var len = lines.GetUpperBound(1);
            var len = 0;
            var lenString=string.Empty;
         //   var sb = new StringBuilder();

        //    sb.Append("<table style=\"background-color: \"> ");

            foreach (var line in lines)
            {
               // sb.AppendLine("<tr>");
                index++;
                if (line.Length > len)
                {
                    len = line.Length;
                    lenString = line;
                    WriteLine(index.ToString());
                }
                //   Write("[" + index + "]");
                kets = line.ToCharArray();
                foreach (var k in kets)
                {
                    //web.dot11 dash.5ㄱ
                  //  sb.AppendLine("<td style='border:0.5px solid black'>");
             //       sb.Append(k);
                  //  sb.AppendLine("</td>");
                }
            //    sb.AppendLine("</tr>");
            }
            sb.Append("</table>");
        //    File.WriteAllText(@"C:\Users\Administrator\Desktop\kets.html", sb.ToString());
          //  Console.Write(sb.ToString());
            //for (int i = 0; i < len; i++)
            //    Write("--");

        }[TestMethod]
        public void WriteCategory()
        {
            var cate = PoweredSource.Category.GetList();
            var o = ParentInfo.GetNodeJson(typeof(RoleCategory).Name);
            WriteLine(o);
            jsonCategory = o;
         }
        [TestMethod]
        public void WriteRoleList()
        {
            var group = PoweredSource.Role.GetList();
            var o = ParentInfo.GetNodeJson(typeof(RoleInfo).Name);
            WriteLine(o);
            jsonRole = o;
        }
        [TestMethod]
        public void WriteRoleGroup()
        {
            var group = PoweredSource.Role.GetGroup();
            var o = ParentInfo.GetNodeJson(typeof(RoleInfo).Name);
            WriteLine(o);
            jsonRoleGroup = o;
        }
        [TestMethod]
        public void WriteIncident()
        {
            var cate = PoweredSource.Incident.GetList();
            var o = ParentInfo.GetNodeJson(typeof(IncidentInfo).Name);
            WriteLine(o);
            jsonIncident = o;
        }